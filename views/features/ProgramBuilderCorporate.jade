extends ../layout

block content
    style(type='text/css').
        .formContainer { width: 50%; display: inline-block; float: left }
        .jsonContainer { width: 50%; display: inline-block; float: right }
        .customizeArea { display: none }
        .customizeName { display: none }
        .associatedPrograms { display: none }
        .hidden { display: none }
    div
        p Use Case:
        ul
            li Only checked items will be used. Can change order of programs by drag/drop. Click copy to clipboard and paste on Instapage::HTML/CSS::Header at the top and above anything else in the Header section.
            li This page allows the selection of multiple programs from multiple brands
            li All programs are disabled by default. To include programs first select a Brand and then check desired programs.
    div.formContainer
        br
        div
            input(id="groupOptions", type="checkbox")
            | Group Options by Vertical
        div.programs Programs (sort by dragging)
            br
            ul.sortable
                each data, index1 in locals.data
                    button(id=data.brand.Id, onclick="programBuilder.toggledisplay('programGroup"+data.brand.Id+"')").toggleGroup.programGroup #{data.brand.Name}
                    br
                    ul(id='programGroup' + data.brand.Id, style="display:none").sortable
                        li
                            div
                                button(onclick="checkAll(this)") Check All
                                =' '
                                button(onclick="uncheckAll(this)") Uncheck All
                            div
                                button(onclick="toggleCert(this)") Certificate                            
                                =' '
                                button(onclick="toggleUnder(this)") Undergraduate                            
                                =' '
                                button(onclick="toggleGrad(this)") Graduate     
                            div
                            each dType in data.degreeTypes
                                if dType != null
                                    button(onclick="toggleType(this)", value=dType.subType)=dType.subType
                                    =' '
                        each program, index in data.programs
                            li
                                div
                                    //- button(onclick="document.getElementById('program"+ data.brand.Id + '-' + index+"').style.display = 'block'") Edit
                                    div.customizeName(id="program"+ data.brand.Id + '-' + index)
                                        input(id="programInput" + data.brand.Id + '-' + index, type="text", value=program.name)
                                        br
                                        button(onclick="programBuilder.updateProgramName('"+data.brand.Id + '-' + index+"')") Save
                                        =' '
                                        button(onclick="document.getElementById('program"+data.brand.Id + '-' + index+"').style.display = ''") Cancel          
                                        =' '  
                                        button(onclick="programBuilder.updateProgramName('"+data.brand.Id + '-' + index+"', true)") Revert            
                                    label(id="programLabel" + data.brand.Id + '-' + index)
                                        input(id="programDefault" + data.brand.Id + '-' + index, type="hidden", value=program.name)
                                        input(id="programCheck" + data.brand.Id + '-' + index, type="checkbox", value=program.id, data-area=program.subType, data-degree=program.type, data-brandName=data.brand.Name, data-brandId=data.brand.Id, checked=false)
                                        =program.name
                                    br  
    div Preview
        br
        select#brands
            option Brand Selection
        br
        select#programs
            option Program Selection
        br            
        br            
        br            
    div.jsonContainer JSON               
        button(id="copy", onclick="programBuilder.copyToClip('#clip')") Copy to clipboard    
        pre(id="json")
        input(type="textarea", style="display:none;", id="clip")
    script(src="/javascripts/features/programBuilderCorporate.js")
    script.
        function checkAll(el) {
            $(el).parent().parent().siblings().find('input').prop('checked', true);
        }
        function uncheckAll(el) {
            $(el).parent().parent().siblings().find('input').prop('checked', false);
        }        
        function toggleCert(el) {
            if ($(el).parent().parent().siblings().find('input[data-degree="Certificate"]').prop('checked')) {
                $(el).parent().parent().siblings().find('input[data-degree="Certificate"]').prop('checked', false);
            } else {
                $(el).parent().parent().siblings().find('input[data-degree="Certificate"]').prop('checked', true);
            }
        }    
        function toggleUnder(el) {
            if ($(el).parent().parent().siblings().find('input[data-degree="Undergraduate"]').prop('checked')) {
                $(el).parent().parent().siblings().find('input[data-degree="Undergraduate"]').prop('checked', false);
            } else {
                $(el).parent().parent().siblings().find('input[data-degree="Undergraduate"]').prop('checked', true);
            }            
        }    
        function toggleGrad(el) {
            if ($(el).parent().parent().siblings().find('input[data-degree="Graduate"]').prop('checked')) {
                $(el).parent().parent().siblings().find('input[data-degree="Graduate"]').prop('checked', false);
            } else {
                $(el).parent().parent().siblings().find('input[data-degree="Graduate"]').prop('checked', true);
            }      
        }
        function toggleType(el) {
            if ($(el).parent().parent().children().find('input[data-area="'+el.value+'"]').prop('checked')) {
                $(el).parent().parent().children().find('input[data-area="'+el.value+'"]').prop('checked', false);
            } else {
                $(el).parent().parent().children().find('input[data-area="'+el.value+'"]').prop('checked', true);
            }             
        }